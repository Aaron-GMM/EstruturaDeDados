{
    "patches": [
        {
            "label": "2025-06-02_19-32-02",
            "content": "@@ -421,17 +421,18 @@\n Sprint(%22\n-%3E\n+%25d\n %22, e.Val\n"
        },
        {
            "label": "2025-06-02_19-32-33",
            "content": "@@ -333,32 +333,33 @@\n  fmt.Sprintf(%22%25d\n+ \n %22, e.Value)%0A%09%09%7D%0A\n@@ -419,21 +419,19 @@\n t.Sprint\n-f\n (%22\n-%25d\n+%3E\n %22, e.Val\n"
        },
        {
            "label": "2025-06-02_19-33-14",
            "content": "@@ -341,17 +341,16 @@\n intf(%22%25d\n-%3E\n %22, e.Val\n"
        },
        {
            "label": "2025-06-02_19-33-52",
            "content": "@@ -41,16 +41,27 @@\n %0A%09%22fmt%22%0A\n+%09%22strings%22%0A\n )%0A%0A// mo\n@@ -339,17 +339,16 @@\n printf(%22\n- \n %25d%3E%22, e.\n@@ -500,16 +500,16 @@\n %22%0A%09%7D%0A%0A%7D%0A\n-\n %09out = %22\n@@ -523,16 +523,145 @@\n t + %22%5D%22%0A\n+%09out = strings.ReplaceAll(out, %22  %22, %22 %22)%0A%09out = strings.ReplaceAll(out, %22%5B %22, %22%5B%22)%0A    out = strings.ReplaceAll(out, %22 %5D%22, %22%5D%22)%0A\n %09return \n"
        },
        {
            "label": "2025-06-02_19-48-12",
            "content": "@@ -328,16 +328,17 @@\n printf(%22\n+ \n %25d%3E%22, e.\n"
        },
        {
            "label": "2025-06-02_19-49-06",
            "content": "@@ -153,38 +153,22 @@\n  %7B%0A%09\n-%0A%09result := %22%22%0A%09result += %22%5B %22\n+var out string\n %0A%09fo\n@@ -227,29 +227,52 @@\n  sword %7B%0A%09%09%09\n-resul\n+if e.Value.(int) %3C 0 %7B%0A%09%09%09ou\n t += fmt.Spr\n@@ -281,11 +281,12 @@\n tf(%22\n+%5B\n %25d\n-%3E\n+%5D\n  %22, \n@@ -308,21 +308,18 @@\n se %7B%0A%09%09%09\n-resul\n+ou\n t += fmt\n@@ -330,17 +330,17 @@\n intf(%22%25d\n- \n+%3E\n %22, e.Val\n@@ -353,57 +353,182 @@\n %7D%0A%09%7D\n-%0A%09result += %22%5D%5Cn%22%0A%09return result%5B:len(result)-1%5D \n+else%7B%0A%09%09if out != %22%22%7B%0A%09%09%09out += %22 %22%0A%09%09%7D%0A%09%09out += fmt.Sprintf(%22%25d%22, e.Value.(int))%0A%09%7D%0A%09if e != sword && e.Next() != nil %7B%0A%09%09out += %22 %22%0A%09%7D%0A%0A%7D%0A%09out = %22%5B%22 + out + %22%5D%22%0A%09return out\n %0A%0A%7D%0A\n"
        },
        {
            "label": "2025-06-03_08-55-52",
            "content": "@@ -248,82 +248,8 @@\n d %7B%0A\n-%09%09%09if e.Value.(int) %3C 0 %7B%0A%09%09%09result += fmt.Sprintf(%22%3C%25d %22, e.Value)%0A%0A%09%09%09%7D%0A\n %09%09%09r\n"
        },
        {
            "label": "2025-06-03_08-59-20",
            "content": "@@ -321,13 +321,8 @@\n %09%09%09%7D\n-else%7B\n %0A%09%09%09\n@@ -360,21 +360,16 @@\n .Value)%0A\n-%09%09%09%7D%0A\n %09%09%7D else\n"
        },
        {
            "label": "2025-06-03_09-00-04",
            "content": "@@ -44,16 +44,65 @@\n fmt%22%0A)%0A%0A\n+// mostra a lista com o elemento sword destacado%0A\n func ToS\n@@ -478,24 +478,62 @@\n lt)-1%5D %0A%0A%7D%0A%0A\n+// move para frente na lista circular%0A\n func Next(l \n@@ -640,24 +640,60 @@\n .Front()%0A%7D%0A%0A\n+// move para tras na lista circular%0A\n func Prev(l \n"
        },
        {
            "label": "2025-06-03_09-00-37",
            "content": "package main\n\nimport (\n\t\"container/list\"\n\t\"fmt\"\n)\n\nfunc ToStr(l *list.List, sword *list.Element) string {\n\t\n\tresult := \"\"\n\tresult += \"[ \"\n\tfor e := l.Front(); e != nil; e = e.Next() {\n\t\tif e == sword {\n\t\t\tif e.Value.(int) < 0 {\n\t\t\tresult += fmt.Sprintf(\"<%d \", e.Value)\n\n\t\t\t}else{\n\t\t\tresult += fmt.Sprintf(\"%d> \", e.Value)\n\t\t\t}\n\t\t} else {\n\t\t\tresult += fmt.Sprintf(\"%d \", e.Value)\n\t\t}\n\t}\n\tresult += \"]\\n\"\n\treturn result[:len(result)-1] \n\n}\n\nfunc Next(l *list.List, it *list.Element) *list.Element {\n\tif it.Next() != nil {\n\t\treturn it.Next()\n\t}\n\treturn l.Front()\n}\n\nfunc Prev(l *list.List, it *list.Element) *list.Element {\n\tif it.Prev() != nil {\n\t\treturn it.Prev()\n\t}\n\treturn l.Back()\n}\n\nfunc main() {\n\tvar qtd, chosen, fase int\n\tfmt.Scan(&qtd, &chosen, &fase)\n\tl := list.New()\n\tfor i := 1; i <= qtd; i++ {\n\t\tl.PushBack(i * fase)\n\t\tfase = -fase\n\t}\n\tsword := l.Front()\n\tfor range chosen - 1 {\n\t\tsword = Next(l, sword)\n\t}\n\tfor range qtd - 1 {\n\t\tfmt.Println(ToStr(l, sword))\n\t\tif sword.Value.(int) > 0 {\n\t\t\tl.Remove(Next(l, sword))\n\t\t\tsword = Next(l, sword)\n\t\t} else {\n\t\t\tl.Remove(Prev(l, sword))\n\t\t\tsword = Prev(l, sword)\n\t\t}\n\t}\n\tfmt.Println(ToStr(l, sword))\n}\n"
        }
    ]
}