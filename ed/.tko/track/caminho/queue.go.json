{
    "patches": [
        {
            "label": "2025-07-08_12-03-23",
            "content": "package main\n\nimport (\n\t\"container/list\"\n)\n\n// Implmenta\u00e7\u00e3o de uma fila gen\u00e9rica usando a lista duplamente encadeada do pacote container/list\ntype Queue[T any] struct {\n\tqueue *list.List\n}\n\nfunc NewQueue[T any]() *Queue[T] {\n\treturn &Queue[T]{\n\t\tqueue: list.New(),\n\t}\n}\nfunc (q *Queue[T]) Enqueue(value T) {\n\tq.queue.PushBack(value)\n}\nfunc (q *Queue[T]) Dequeue() (T, bool) {\n\telement := q.queue.Front()\n\tif element == nil {\n\t\tvar zero T\n\t\treturn zero, false\n\t}\n\tq.queue.Remove(element)\n\tvalue := element.Value.(T)\n\treturn value, true\n}\nfunc (q *Queue[T]) Peek() (T, bool) {\n\telement := q.queue.Front()\n\tif element == nil {\n\t\tvar zero T\n\t\treturn zero, false\n\t}\n\tvalue := element.Value.(T)\n\treturn value, true\n}\nfunc (q *Queue[T]) IsEmpty() bool {\n\treturn q.queue.Len() == 0\n}\n",
            "lines": "41"
        }
    ]
}